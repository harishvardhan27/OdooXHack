{"ast":null,"code":"import axios from'axios';const API_URL=import.meta.env.VITE_API_URL||'http://localhost:8000';const api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Add a request interceptor to include the token if available\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","API_URL","import","meta","env","VITE_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject"],"sources":["E:/communitypulse/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = import.meta.env.VITE_API_URL || 'http://localhost:8000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor to include the token if available\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAGC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,YAAY,EAAI,uBAAuB,CAEvE,KAAM,CAAAC,GAAG,CAAGN,KAAK,CAACO,MAAM,CAAC,CACvBC,OAAO,CAAEP,OAAO,CAChBQ,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,WAAAC,MAAA,CAAaJ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAM,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}