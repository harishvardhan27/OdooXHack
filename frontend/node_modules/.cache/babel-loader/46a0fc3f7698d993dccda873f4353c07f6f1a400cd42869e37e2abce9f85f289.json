{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getEvents, getEventById } from '../services/events';\nconst useEvents = (initialFilters = {}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState(initialFilters);\n  const fetchEvents = async () => {\n    try {\n      setLoading(true);\n      const data = await getEvents(filters);\n      setEvents(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchEventById = async id => {\n    try {\n      setLoading(true);\n      const event = await getEventById(id);\n      return event;\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchEvents();\n  }, [filters]);\n  return {\n    events,\n    loading,\n    error,\n    filters,\n    setFilters,\n    fetchEvents,\n    fetchEventById\n  };\n};\n_s(useEvents, \"VFrFMbmRCRMSqrZebEhcj/7zTf8=\");\nexport default useEvents;","map":{"version":3,"names":["useState","useEffect","getEvents","getEventById","useEvents","initialFilters","_s","events","setEvents","loading","setLoading","error","setError","filters","setFilters","fetchEvents","data","err","message","fetchEventById","id","event"],"sources":["E:/communitypulse/frontend/src/hooks/useEvents.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getEvents, getEventById } from '../services/events';\r\n\r\nconst useEvents = (initialFilters = {}) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [filters, setFilters] = useState(initialFilters);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await getEvents(filters);\r\n      setEvents(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchEventById = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      const event = await getEventById(id);\r\n      return event;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, [filters]);\r\n\r\n  return {\r\n    events,\r\n    loading,\r\n    error,\r\n    filters,\r\n    setFilters,\r\n    fetchEvents,\r\n    fetchEventById,\r\n  };\r\n};\r\n\r\nexport default useEvents;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,YAAY,QAAQ,oBAAoB;AAE5D,MAAMC,SAAS,GAAGA,CAACC,cAAc,GAAG,CAAC,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAACK,cAAc,CAAC;EAEtD,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFL,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMM,IAAI,GAAG,MAAMd,SAAS,CAACW,OAAO,CAAC;MACrCL,SAAS,CAACQ,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZL,QAAQ,CAACK,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMS,cAAc,GAAG,MAAOC,EAAE,IAAK;IACnC,IAAI;MACFV,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMW,KAAK,GAAG,MAAMlB,YAAY,CAACiB,EAAE,CAAC;MACpC,OAAOC,KAAK;IACd,CAAC,CAAC,OAAOJ,GAAG,EAAE;MACZL,QAAQ,CAACK,GAAG,CAACC,OAAO,CAAC;MACrB,OAAO,IAAI;IACb,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdc,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,OAAO;IACLN,MAAM;IACNE,OAAO;IACPE,KAAK;IACLE,OAAO;IACPC,UAAU;IACVC,WAAW;IACXI;EACF,CAAC;AACH,CAAC;AAACb,EAAA,CA5CIF,SAAS;AA8Cf,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}