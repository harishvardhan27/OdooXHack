{"ast":null,"code":"var _jsxFileName = \"E:\\\\communitypulse\\\\frontend\\\\src\\\\pages\\\\PollsPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Button, Paper } from '@mui/material';\nimport { Add } from '@mui/icons-material';\nimport api from '../services/api';\nimport PollCard from '../components/PollCard';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollsPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [polls, setPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPolls = async () => {\n      try {\n        const response = await api.get('/polls');\n        setPolls(response.data);\n      } catch (error) {\n        console.error('Error fetching polls:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPolls();\n  }, []);\n  const handleVote = async (pollId, option) => {\n    try {\n      await api.post('/votes', {\n        poll_id: pollId,\n        option\n      });\n      // Refresh polls after voting\n      const response = await api.get('/polls');\n      setPolls(response.data);\n    } catch (error) {\n      console.error('Error voting:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Loading polls...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Community Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), (user === null || user === void 0 ? void 0 : user.is_admin) && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 50\n        }, this),\n        children: \"Create Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), polls.length === 0 ? /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No polls available yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : polls.map(poll => /*#__PURE__*/_jsxDEV(PollCard, {\n      poll: poll,\n      onVote: handleVote\n    }, poll.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PollsPage, \"Ej3tCUXQCNwMqKHABvNg32sOg8w=\", false, function () {\n  return [useAuth];\n});\n_c = PollsPage;\nexport default PollsPage;\nvar _c;\n$RefreshReg$(_c, \"PollsPage\");","map":{"version":3,"names":["useState","useEffect","Container","Typography","Box","Button","Paper","Add","api","PollCard","useAuth","jsxDEV","_jsxDEV","PollsPage","_s","user","polls","setPolls","loading","setLoading","fetchPolls","response","get","data","error","console","handleVote","pollId","option","post","poll_id","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","display","justifyContent","alignItems","mb","variant","is_admin","startIcon","length","p","textAlign","map","poll","onVote","id","_c","$RefreshReg$"],"sources":["E:/communitypulse/frontend/src/pages/PollsPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Container, Typography, Box, Button, Paper } from '@mui/material';\r\nimport { Add } from '@mui/icons-material';\r\nimport api from '../services/api';\r\nimport PollCard from '../components/PollCard';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst PollsPage = () => {\r\n  const { user } = useAuth();\r\n  const [polls, setPolls] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPolls = async () => {\r\n      try {\r\n        const response = await api.get('/polls');\r\n        setPolls(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching polls:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPolls();\r\n  }, []);\r\n\r\n  const handleVote = async (pollId, option) => {\r\n    try {\r\n      await api.post('/votes', { poll_id: pollId, option });\r\n      // Refresh polls after voting\r\n      const response = await api.get('/polls');\r\n      setPolls(response.data);\r\n    } catch (error) {\r\n      console.error('Error voting:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) return <Typography>Loading polls...</Typography>;\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h4\">Community Polls</Typography>\r\n        {user?.is_admin && (\r\n          <Button variant=\"contained\" startIcon={<Add />}>\r\n            Create Poll\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      \r\n      {polls.length === 0 ? (\r\n        <Paper sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography>No polls available yet.</Typography>\r\n        </Paper>\r\n      ) : (\r\n        polls.map(poll => (\r\n          <PollCard \r\n            key={poll.id} \r\n            poll={poll} \r\n            onVote={handleVote} \r\n          />\r\n        ))\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PollsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}